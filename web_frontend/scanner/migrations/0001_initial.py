# Generated by Django 4.2.24 on 2025-09-09 15:59

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ScanJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target', models.TextField(help_text='IP, CIDR ou hostname')),
                ('ports', models.TextField(help_text='Lista de portas ou ranges')),
                ('protocols', models.CharField(default='TCP', help_text='TCP, UDP ou ambos', max_length=10)),
                ('timeout', models.IntegerField(default=3, help_text='Timeout em segundos')),
                ('threads', models.IntegerField(default=50, help_text='Número de threads')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('running', 'Executando'), ('completed', 'Concluído'), ('failed', 'Falhou'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('progress', models.IntegerField(default=0, help_text='Progresso em %')),
                ('total_ports', models.IntegerField(default=0)),
                ('scanned_ports', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, help_text='Mensagem de erro se falhar')),
            ],
            options={
                'verbose_name': 'Job de Varredura',
                'verbose_name_plural': 'Jobs de Varredura',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScanHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.JSONField(help_text='Resumo da varredura em JSON')),
                ('execution_time', models.FloatField(help_text='Tempo total de execução em segundos')),
                ('open_ports', models.IntegerField(default=0)),
                ('closed_ports', models.IntegerField(default=0)),
                ('filtered_ports', models.IntegerField(default=0)),
                ('hosts_scanned', models.IntegerField(default=0)),
                ('hosts_active', models.IntegerField(default=0)),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='scanner.scanjob')),
            ],
            options={
                'verbose_name': 'Histórico de Varredura',
                'verbose_name_plural': 'Histórico de Varreduras',
            },
        ),
        migrations.CreateModel(
            name='ScanResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.GenericIPAddressField(help_text='Endereço IP do host')),
                ('port', models.IntegerField(help_text='Número da porta')),
                ('protocol', models.CharField(help_text='TCP ou UDP', max_length=5)),
                ('status', models.CharField(choices=[('open', 'Aberta'), ('closed', 'Fechada'), ('filtered', 'Filtrada'), ('open|filtered', 'Aberta/Filtrada')], max_length=15)),
                ('response_time', models.FloatField(blank=True, help_text='Tempo de resposta em ms', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='scanner.scanjob')),
            ],
            options={
                'verbose_name': 'Resultado da Varredura',
                'verbose_name_plural': 'Resultados da Varredura',
                'ordering': ['host', 'port'],
                'unique_together': {('job', 'host', 'port', 'protocol')},
            },
        ),
    ]
